---
- hosts: master
  become: yes
  become_method: sudo
  tasks:

  - set_fact:
      env_kc: '{{ proxy_env |default({}) | combine ({"PATH" : "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin"  }) | combine ({"KUBECONFIG" :"/etc/kubernetes/admin.conf"}) }}'
  
  - name: 'Download {{ helm.install_script_url }}'
    environment: '{{ proxy_env | default ({}) }}'
    get_url: url={{ helm.install_script_url | default ("") }} dest=/tmp/helm_install_script force=yes mode="0755"
    when: helm.install_script_url is defined
    tags:
    - helm

  - name: Run /tmp/helm_install_script
    environment: '{{env_kc}}'
    shell: "/tmp/helm_install_script"
    register: command_result
    changed_when: '"is up-to-date" not in command_result.stdout'
    when: helm.install_script_url is defined
    args:
      chdir: /tmp/
    tags:
    - helm

  - name: helm completion shell
    environment: '{{env_kc}}'
    shell: helm completion {{ shell | default ('bash') }} > ~/.kube/helm_completion.bash.inc
    args:
      warn: no
    tags:
    - helm

  - name: helm completion to ~/.bash_profile
    lineinfile:
      dest: ~/.bash_profile
      line: '[[ -x ${HOME}/.kube/helm_completion.bash.inc ]] && source ${HOME}/.kube/helm_completion.bash.inc'
      state: present
    when: shell is undefined or shell == 'bash'
    tags:
    - helm

  - name: helm remove/cleanup
    environment: '{{env_kc}}'
    shell: ( helm reset || true ) && kubectl delete deployment --namespace=kube-system tiller-deploy && kubectl delete service --namespace=kube-system tiller-deploy
    tags:
    - helm_reset
    - helm
    ignore_errors: yes

  - name: helm init
    environment: '{{env_kc}}'
    shell: "helm init --host {{ inventory_hostname }}:6443 "
    when: helm.install_script_url is defined
    register: command_result
    changed_when: "'Tiller is already installed' not in command_result.stdout"
    args:
      chdir: /root/
    tags:
    - helm

  - name: helm sanity - wait for tiller pod to be running
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: "kubectl get --namespace kube-system pods | tail -n +2 | grep -w 'tiller-deploy' | grep -v -w 'Running' || true "
    register: command_result
    tags:
    - sanity_helm
    - sanity
    - helm
    until: command_result.stdout == ""
    retries: 20
    delay: 3

  - name: Update helm Tiller
    environment: '{{env_kc}}'
    command: helm init --upgrade
    when: helm is defined
    tags:
    - helm

  - name: helm repo add 
    environment: '{{env_kc}}'
    command: helm repo add {{ item.name }} {{ item.url }}
    with_items: 
      - '{{ helm.repos | default("") }}'
    when: helm.repos is defined
    tags:
    - helm

  - name: helm repo update #Sometimes initial repo add corrupts the repo and update fixes it.
    environment: '{{env_kc}}'
    command: helm repo update
    when: helm is defined
    tags:
    - helm

  - name: helm sanity - wait for tiller pod to be running
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: "kubectl get --namespace kube-system pods | tail -n +2 | grep -w 'tiller-deploy' | grep -v -w 'Running' || true "
    register: command_result
    #failed_when: '"/" in command_result.stdout'
    tags:
    - sanity_helm
    - sanity
    - helm
    until: command_result.stdout == ""
    retries: 20
    delay: 3

  - name: helm charts/packages deployment
    environment: '{{env_kc}}'
    command: 'helm install {{ item.repo }} --namespace {{ item.namespace | default("default") }} --name {{ item.name }} {{ item.options | default ("") }}'
    with_items: 
      - "{{ helm.packages_list }}"
    when: helm.packages_list is defined
    tags:
    - helm
    - charts_deploy

  - name: helm full sanity - wait for all installed charts to become running
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    shell: "kubectl get --all-namespaces pods | tail -n +2 | grep -v -w 'Running' || true "
    register: command_result
    tags:
    - sanity_helm
    - sanity
    - helm
    until: command_result.stdout == ""
    retries: 30
    delay: 3

